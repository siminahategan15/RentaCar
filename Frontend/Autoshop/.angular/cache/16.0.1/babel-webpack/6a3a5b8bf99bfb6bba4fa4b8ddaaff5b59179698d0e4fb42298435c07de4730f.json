{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass LoginService {\n  constructor() {\n    this.isLoggedInSubject = new BehaviorSubject(null);\n  }\n  login(user) {\n    this.isLoggedInSubject.next(user);\n  }\n  logout() {\n    this.isLoggedInSubject.next(null);\n  }\n  getLoggedUser() {\n    return this.isLoggedInSubject.asObservable();\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});\nexport { LoginService };","map":{"version":3,"names":["BehaviorSubject","LoginService","constructor","isLoggedInSubject","login","user","next","logout","getLoggedUser","asObservable","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus\\Desktop\\Proiect programare Web\\Frontend\\Autoshop\\src\\app\\login\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IUser } from 'src/app/users/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private isLoggedInSubject = new BehaviorSubject<IUser | null>(null);\n  constructor() {\n  }\n   \n\n  login(user: IUser): void {\n    this.isLoggedInSubject.next(user);\n  }\n\n  logout(): void {\n    this.isLoggedInSubject.next(null);\n  }\n\n  getLoggedUser() {\n    return this.isLoggedInSubject.asObservable();\n  }\n\n\n\n}\n\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAGtC,MAGaC,YAAY;EAEvBC,YAAA;IADQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAe,IAAI,CAAC;EAEnE;EAGAI,KAAKA,CAACC,IAAW;IACf,IAAI,CAACF,iBAAiB,CAACG,IAAI,CAACD,IAAI,CAAC;EACnC;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACJ,iBAAiB,CAACG,IAAI,CAAC,IAAI,CAAC;EACnC;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,iBAAiB,CAACM,YAAY,EAAE;EAC9C;;AAhBWR,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAS,OAAA,EAAZT,YAAY,CAAAU,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}