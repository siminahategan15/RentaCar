{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.is_register = false;\n    this.userName2 = '';\n    this.password2 = '';\n    this.email2 = '';\n    this.firstName2 = '';\n    this.lastName2 = '';\n  }\n  ngOnInit() {\n    this.userService.getUsers().subscribe(res => {\n      this.users = res;\n      console.log(res);\n    });\n  }\n  toggleRegistering() {\n    this.is_register = !this.is_register;\n  }\n  onSubmit() {\n    let logged_user = {\n      firstName: this.firstName2,\n      lastName: this.lastName2,\n      userName: this.userName2,\n      password: this.password2,\n      email: this.email2\n    };\n    if (this.is_register) {\n      const user_exits = this.users.find(u => u.userName == logged_user.userName && u.password == logged_user.password);\n      if (user_exits != undefined) {\n        alert('User Logged Succesfully');\n        this.router.navigate(['/cars']);\n      } else {\n        alert('Wrong Credentials');\n      }\n    } else {\n      // this will be replaced with form value\n      this.userService.createUser(logged_user).subscribe(res => this.users.push(res));\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","userService","router","is_register","userName2","password2","email2","firstName2","lastName2","ngOnInit","getUsers","subscribe","res","users","console","log","toggleRegistering","onSubmit","logged_user","firstName","lastName","userName","password","email","user_exits","find","u","undefined","alert","navigate","createUser","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\Desktop\\Proiect programare Web\\Frontend\\Autoshop\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { IUser } from '../users/models/user';\nimport { UsersService } from '../users/services/users.service';\nimport { Route } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  users!: IUser[];\n    is_register:boolean=false;\n    userName2:string='';\n    password2:string='';\n    email2:string='';\n    firstName2:string='';\n    lastName2:string='';\n\n\n    constructor(private userService:UsersService, private router:Route) {}\n    ngOnInit(): void {\n      this.userService.getUsers().subscribe(res => {\n        this.users =res;\n      console.log(res);\n    }\n      );\n     }\n\n  toggleRegistering()\n  {\n    this.is_register=!this.is_register;\n  }\n\n  onSubmit()\n  {\n    let logged_user:IUser={\n      \n      firstName:this.firstName2,\n    lastName:this.lastName2,\n    userName:this.userName2,\n    password:this.password2,\n    email:this.email2\n\n    };\n    if(this.is_register)\n    {\n     \n      const user_exits=this.users.find(u=>u.userName==logged_user.userName && u.password==logged_user.password);\n      if(user_exits!=undefined)\n      {\n        alert('User Logged Succesfully');\n        this.router.navigate(['/cars']);\n      }\n      else{\n      alert('Wrong Credentials');\n      }\n     \n    }else\n    {\n      \n  \n  // this will be replaced with form value\n    this.userService.createUser(logged_user).subscribe(\n      res => this.users.push(res), \n    );\n\n    }\n\n    \n\n\n\n\n  \n  }\n\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAUzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAUvBC,YAAoBC,WAAwB,EAAUC,MAAY;IAA9C,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAR5D,KAAAC,WAAW,GAAS,KAAK;IACzB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,MAAM,GAAQ,EAAE;IAChB,KAAAC,UAAU,GAAQ,EAAE;IACpB,KAAAC,SAAS,GAAQ,EAAE;EAGkD;EACrEC,QAAQA,CAAA;IACN,IAAI,CAACR,WAAW,CAACS,QAAQ,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MAC1C,IAAI,CAACC,KAAK,GAAED,GAAG;MACjBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAClB,CAAC,CACE;EACF;EAEHI,iBAAiBA,CAAA;IAEf,IAAI,CAACb,WAAW,GAAC,CAAC,IAAI,CAACA,WAAW;EACpC;EAEAc,QAAQA,CAAA;IAEN,IAAIC,WAAW,GAAO;MAEpBC,SAAS,EAAC,IAAI,CAACZ,UAAU;MAC3Ba,QAAQ,EAAC,IAAI,CAACZ,SAAS;MACvBa,QAAQ,EAAC,IAAI,CAACjB,SAAS;MACvBkB,QAAQ,EAAC,IAAI,CAACjB,SAAS;MACvBkB,KAAK,EAAC,IAAI,CAACjB;KAEV;IACD,IAAG,IAAI,CAACH,WAAW,EACnB;MAEE,MAAMqB,UAAU,GAAC,IAAI,CAACX,KAAK,CAACY,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACL,QAAQ,IAAEH,WAAW,CAACG,QAAQ,IAAIK,CAAC,CAACJ,QAAQ,IAAEJ,WAAW,CAACI,QAAQ,CAAC;MACzG,IAAGE,UAAU,IAAEG,SAAS,EACxB;QACEC,KAAK,CAAC,yBAAyB,CAAC;QAChC,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MACG;QACJD,KAAK,CAAC,mBAAmB,CAAC;;KAG3B,MACD;MAGF;MACE,IAAI,CAAC3B,WAAW,CAAC6B,UAAU,CAACZ,WAAW,CAAC,CAACP,SAAS,CAChDC,GAAG,IAAI,IAAI,CAACC,KAAK,CAACkB,IAAI,CAACnB,GAAG,CAAC,CAC5B;;EAUH;CAGD;AApEYb,cAAc,GAAAiC,UAAA,EAL1BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpC,cAAc,CAoE1B;SApEYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}