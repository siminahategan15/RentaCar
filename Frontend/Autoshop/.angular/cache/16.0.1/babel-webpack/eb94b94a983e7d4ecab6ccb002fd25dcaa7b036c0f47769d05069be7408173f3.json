{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet IndexCarsComponent = class IndexCarsComponent {\n  constructor(carService, router, formBuilder) {\n    this.carService = carService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    //adaugare\n    this.brand2 = '';\n    this.model2 = '';\n    this.productionYear2 = 0;\n    this.stock2 = 0;\n    this.checkoutForm = this.formBuilder.group({\n      brand: '',\n      model: '',\n      productionYear: 0,\n      stock: 0\n    });\n  }\n  ngOnInit() {\n    this.carService.getCars().subscribe(res => {\n      this.cars = res;\n      console.log(res);\n      this.checkoutForm.patchValue(res[0]);\n    });\n  }\n  showCar(car) {\n    this.router.navigate([`/cars/${car.idCar}`]);\n  }\n  createCar() {\n    let car = {\n      brand: this.brand2,\n      model: this.model2,\n      productionYear: this.productionYear2,\n      stock: this.stock2\n    };\n    // this will be replaced with form value\n    this.carService.createCar(car).subscribe(res => this.cars.push(res));\n  }\n  onSubmit() {\n    // Process checkout data here\n    this.brand2 = this.checkoutForm.get('brand')?.value;\n    this.stock2 = this.checkoutForm.get('stock')?.value;\n    this.productionYear2 = this.checkoutForm.get('productionYear')?.value;\n    this.model2 = this.checkoutForm.get('model')?.value;\n    ;\n    this.createCar();\n    console.warn('The car has been created', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n  deleteCar(car) {\n    this.carService.deleteCar(car.idCar).subscribe(res => {\n      const carIndex = this.cars.indexOf(car);\n      this.cars.splice(carIndex, 1);\n    });\n  }\n  updateCar(car) {\n    const updatedCar = {\n      brand: this.brand2,\n      model: this.model2,\n      productionYear: this.productionYear2,\n      stock: this.stock2\n    };\n    this.carService.updateCar(car.idCar, updatedCar).subscribe(res => {\n      this.checkoutForm.patchValue(car);\n    });\n  }\n};\nIndexCarsComponent = __decorate([Component({\n  selector: 'app-index-cars',\n  templateUrl: './index-cars.component.html',\n  styleUrls: ['./index-cars.component.css']\n})], IndexCarsComponent);\nexport { IndexCarsComponent };","map":{"version":3,"names":["Component","IndexCarsComponent","constructor","carService","router","formBuilder","brand2","model2","productionYear2","stock2","checkoutForm","group","brand","model","productionYear","stock","ngOnInit","getCars","subscribe","res","cars","console","log","patchValue","showCar","car","navigate","idCar","createCar","push","onSubmit","get","value","warn","reset","deleteCar","carIndex","indexOf","splice","updateCar","updatedCar","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\Desktop\\Proiect programare Web\\Frontend\\Autoshop\\src\\app\\cars\\containers\\index-cars\\index-cars.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CarService } from '../../services/car.service';\nimport { ICar } from '../../models/car';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl,  FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-index-cars',\n  templateUrl: './index-cars.component.html',\n  styleUrls: ['./index-cars.component.css']\n})\nexport class IndexCarsComponent implements OnInit {\n\n  cars!: ICar[];\n//adaugare\n  \n  \n  brand2:string='';\n  model2:string='';\n  productionYear2=0;\n  stock2=0;\n  checkoutForm:FormGroup;\n\nconstructor(\n    private carService:CarService,\n    private router:Router,\n    private formBuilder: FormBuilder,\n    ){\n      this.checkoutForm=this.formBuilder.group({\n\n        brand:'',\n        model:'',\n        productionYear:0,\n        stock:0\n      });\n    \n    }\n  \n\n  ngOnInit(): void {\n    this.carService.getCars().subscribe(res => {\n      this.cars =res;\n    console.log(res);\n    this.checkoutForm.patchValue(res[0]);\n   }\n  \n    )\n   }\n\n   showCar(car: ICar)\n   {\n    this.router.navigate([`/cars/${car.idCar}`]);\n   }\n  \n  createCar() {\n   \n     let car:ICar={\n      \n      brand:this.brand2,\n    model:this.model2,\n    productionYear: this.productionYear2,\n    stock:this.stock2\n\n    };\n\n// this will be replaced with form value\n  this.carService.createCar(car).subscribe(\n    res => this.cars.push(res), \n  );\n}\n\nonSubmit(): void {\n      // Process checkout data here\n\n        this.brand2= this.checkoutForm.get('brand')?.value;\n\n        this.stock2= this.checkoutForm.get('stock')?.value;\n        this.productionYear2= this.checkoutForm.get('productionYear')?.value;\n        this.model2= this.checkoutForm.get('model')?.value;\n;      \n      this.createCar();\n      console.warn('The car has been created', this.checkoutForm.value);\n      this.checkoutForm.reset();\n    }\n\n  deleteCar(car: ICar)\n  {\n    this.carService.deleteCar(car.idCar).subscribe(\n      (res: any)=> {\n        const carIndex = this.cars.indexOf(car);\n        this.cars.splice(carIndex,1);\n      }\n    )\n  }\n\n\n  updateCar(car:ICar)\n  {\n    const updatedCar: ICar = {\n    brand:this.brand2,\n    model:this.model2,\n    productionYear: this.productionYear2,\n    stock:this.stock2\n    };\n    this.carService.updateCar(car.idCar, updatedCar).subscribe(\n      res => {\n        this.checkoutForm.patchValue(car);\n      }\n    );\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}