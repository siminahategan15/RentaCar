{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass LoginService {\n  constructor() {\n    this.loggedInUser = null;\n  }\n  login(user) {\n    this.loggedInUser = user;\n  }\n  logout() {\n    this.loggedInUser = null;\n  }\n  getLoggedUser() {\n    return this.loggedInUser;\n  }\n  isLoggedIn() {\n    return !!this.loggedInUser;\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});\nexport { LoginService };","map":{"version":3,"names":["LoginService","constructor","loggedInUser","login","user","logout","getLoggedUser","isLoggedIn","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus\\Desktop\\Proiect programare Web\\Frontend\\Autoshop\\src\\app\\login\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IUser } from 'src/app/users/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private loggedInUser: IUser | null = null;\n  constructor() {\n  }\n   \n\n  login(user: IUser): void {\n    this.loggedInUser = user;\n  }\n\n  logout(): void {\n    this.loggedInUser = null;\n  }\n\n  getLoggedUser(): IUser | null {\n    return this.loggedInUser;\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.loggedInUser;\n  }\n\n}\n\n"],"mappings":";AAGA,MAGaA,YAAY;EAEvBC,YAAA;IADQ,KAAAC,YAAY,GAAiB,IAAI;EAEzC;EAGAC,KAAKA,CAACC,IAAW;IACf,IAAI,CAACF,YAAY,GAAGE,IAAI;EAC1B;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACH,YAAY,GAAG,IAAI;EAC1B;EAEAI,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,YAAY;EAC1B;EAEAK,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACL,YAAY;EAC5B;;AApBWF,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPV,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}